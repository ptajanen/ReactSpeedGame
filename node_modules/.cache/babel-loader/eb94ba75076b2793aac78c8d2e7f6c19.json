{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s1900570\\\\react\\\\speedgame\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport Circle from './counter/Circle.js';\nimport GameOver from './gameOver/GameOver.js';\nimport Score from './Score.js';\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current: 0,\n      score: 0,\n      rounds: 0,\n      showGameOver: false\n    };\n    this.pace = 1500;\n    this.timer = undefined;\n\n    this.next = () => {\n      if (this.state.rounds >= 4) {\n        this.endHandler();\n        return;\n      }\n\n      let nextActive = undefined;\n\n      do {\n        nextActive = getRndInteger(1, 4);\n      } while (nextActive === this.state.current);\n\n      this.setState({\n        current: nextActive\n      });\n      this.pace *= 0.95;\n      this.timer = setTimeout(this.next.bind(this), this.pace);\n      console.log(this.state.current);\n    };\n\n    this.clickHandler = btnId => {\n      console.log('Well done!', btnId);\n\n      if (this.state.current !== btnId) {\n        this.endHandler();\n        return;\n      }\n\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.startHandler = () => {\n      this.next();\n    };\n\n    this.endHandler = () => {\n      this.setState({\n        showGameOver: true\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Speed Game\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Your score is: \", this.state.score)), React.createElement(Circle, {\n      buttonColor: \"green\",\n      active: this.state.current === 1,\n      click: () => this.clickHandler(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      buttonColor: \"red\",\n      active: this.state.current === 2,\n      click: () => this.clickHandler(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      buttonColor: \"yellow\",\n      active: this.state.current === 3,\n      click: () => this.clickHandler(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      buttonColor: \"blue\",\n      active: this.state.current === 4,\n      click: () => this.clickHandler(4),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button1\", {\n      className: \"buttons\",\n      onClick: this.startHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" START the GAME \"), React.createElement(\"button2\", {\n      className: \"buttons\",\n      onClick: this.stopHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"  STOP the GAME  \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.showGameOver && React.createElement(GameOver, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\s1900570\\react\\speedgame\\src\\App.js"],"names":["React","Component","Circle","GameOver","Score","getRndInteger","min","max","Math","floor","random","App","state","current","score","rounds","showGameOver","pace","timer","undefined","next","endHandler","nextActive","setState","setTimeout","bind","console","log","clickHandler","btnId","startHandler","render","stopHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport './index.css';\nimport Circle from './counter/Circle.js';\nimport GameOver from './gameOver/GameOver.js';\nimport Score from './Score.js';\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass App extends Component {\n\nstate= {\ncurrent:0,\nscore:0,\nrounds:0,\nshowGameOver:false\n};\n\npace = 1500;\n  timer = undefined;\n\n  next = () => {\n    if(this.state.rounds >=4){\n      this.endHandler();\n      return;\n    }\n    let nextActive = undefined;\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (\n      nextActive === this.state.current\n    );\n    this.setState({\n      current: nextActive,\n    });\n    this.pace *= 0.95;\n    this.timer = setTimeout(this.next.bind(this), this.pace);\n    console.log(this.state.current);\n  }\n\n    clickHandler = (btnId) => {\n    console.log('Well done!', btnId);\n    if(this.state.current !== btnId){\n      this.endHandler();\n      return;\n    }\n\n    this.setState({\n      score: this.state.score + 1\n    })\n  }\n\n  startHandler = () => {\n    this.next();\n  }\n\n  endHandler = () =>{\n    this.setState({showGameOver: true})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>Speed Game</h1>\n          <p>Your score is: {this.state.score}</p>\n        </div>\n\n<Circle\n  buttonColor='green'\n  active={this.state.current === 1}\n  click={() => this.clickHandler(1)}\n/>\n\n<Circle\n  buttonColor='red'\n  active={this.state.current === 2}\n  click={() => this.clickHandler(2)}\n/>\n\n<Circle \n  buttonColor='yellow'\n  active={this.state.current === 3}\n  click={() => this.clickHandler(3)}\n/>\n\n<Circle \n  buttonColor='blue'\n  active={this.state.current === 4}\n  click={() => this.clickHandler(4)}\n/>\n<div>\n  <button1 className=\"buttons\"\n  onClick = { this.startHandler } > START the GAME </button1>   \n  <button2 className=\"buttons\"     \n  onClick = { this.stopHandler } >  STOP the GAME  </button2>\n</div>\n<div>\n          {this.state.showGameOver &&\n            <GameOver\n              score={this.state.score}\n            />}\n        </div>\n      </div>\n    );\n  }\n}  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}